
language: cpp

cache: ccache

#On Ubuntu Trusty (14.04), Qt5 version is 5.2.1.
#We use an external ppa to get Qt 5.9
#Qt is then installed in /opt/qt59/
#See https://launchpad.net/~beineri/+archive/ubuntu/opt-qt591-trusty

jobs:
  include:
    # ###
    # # - stage: Ubuntu 14.04 (gcc-4.8.4, cmake 3.9.2) Qt 5.2.1, Debug
    # #   os: linux
    # #   dist: trusty
    # #   compiler: gcc
    # #   addons:
    # #     apt:
    # #       packages:
    # #         - cmake
    # #         - ccache
    # #         - ninja-build
    # #         - libpng-dev
    # #         - libjpeg-dev
    # #         - libopencv-dev
    # #         - qtbase5-dev
    # #         - qtdeclarative5-dev
    # #         - libqt5xmlpatterns5-dev
    # #         - libqt5opengl5-dev

    # #   script:
    # #     - cmake --version
    # #     - gcc --version
    # #     - ninja --version
    # #     - qmake --version
    # #     - qtchooser -list-versions
    # #     - export QT_SELECT=qt5
    # #     - qmake --version        
    # #     - mkdir build
    # #     - cd build
    # #     - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON
    # #     - ninja -j 3
    # #     - ninja test

    - stage: Ubuntu 14.04 (gcc-4.8.4, cmake 3.9.2), BUILD_ONLY_DEGRADATIONS, ninja, Debug
      os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
      script:
        - cmake --version
        - gcc --version
        - ninja --version
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DBUILD_ONLY_DEGRADATIONS=ON
        - ninja -j 3 || travis_terminate 1
        - ninja test
        - travis_terminate 0


    - stage: Ubuntu 20.04 (gcc-9.3.0, cmake 3.16.8), Qt 5.12.8, ninja, Release
      os: linux
      dist: focal
      compiler: gcc
      addons:
        apt:
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - qtbase5-dev
            - qtdeclarative5-dev
            - libqt5xmlpatterns5-dev
            - libqt5opengl5-dev

      script:
        - cmake --version
        - gcc --version
        - qmake --version
        - qtchooser -list-versions
        - export QT_SELECT=qt5
        - qmake --version        
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON
        - ninja -j 3 || travis_terminate 1
        - ninja test

    - stage: Ubuntu 16.04 (gcc-5.4.0, cmake 3.12.4), Qt 5.5.1, ninja, Release
      os: linux
      dist: xenial
      compiler: gcc
      addons:
        apt:
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - qtbase5-dev
            - qtdeclarative5-dev
            - libqt5xmlpatterns5-dev
            - libqt5opengl5-dev

      script:
        - cmake --version
        - gcc --version
        - qmake --version
        - qtchooser -list-versions
        - export QT_SELECT=qt5
        - qmake --version        
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DBUILD_OTHER_PROGS=ON -DBUILD_OTHER_PROGS_3D=ON 
        - ninja -j 3
        - ninja test


    - stage: Ubuntu 18.04 (gcc-7.4.0, cmake 3.10.2), Qt 5.9.5, make, Release
      os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          packages:
            - cmake
            - ccache
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - qtbase5-dev
            - qtdeclarative5-dev
            - libqt5xmlpatterns5-dev
            - libqt5opengl5-dev

      script:
        - cmake --version
        - gcc --version
        - qmake --version
        - qtchooser -list-versions
        - export QT_SELECT=qt5
        - qmake --version        
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON
        - make -j 4
        - make test


    # ###
    # - stage: Ubuntu 14.04, gcc-4.8.3, Qt5.2.1, Debug
    #   os: linux
    #   dist: trusty
    #   compiler: gcc
    #   addons:
    #     apt:
    #       packages:
    #         - cmake
    #         - ccache
    #         - ninja-build
    #         - libpng-dev
    #         - libjpeg-dev
    #         - libopencv-dev
    #         - qtbase5-dev
    #         - qtdeclarative5-dev
    #         - libqt5xmlpatterns5-dev
    #         - libqt5opengl5-dev

    #   script:
    #     - mkdir build
    #     - cd build
    #     - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug 
    #     - ninja -j 3

    # ###
    # - stage: Ubuntu 14.04, gcc-7.0, Qt5.9, Release
    #   os: linux
    #   dist: trusty
    #   compiler: gcc
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - deadsnakes
    #       packages:
    #         - cmake
    #         - ccache
    #         - ninja-build
    #         - libpng-dev
    #         - libjpeg-dev
    #         - libopencv-dev
    #         - g++-7

    #   before_install:
    #     - sudo add-apt-repository -y ppa:beineri/opt-qt591-trusty
    #     - sudo apt-get -qy update
    #     - eval "${MATRIX_EVAL}"

    #   install:
    #     - sudo apt-get -qy install qt59-meta-minimal qt59declarative qt59xmlpatterns
        
    #   env:
    #     - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    #   script:
    #     - mkdir build
    #     - cd build
    #     - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/opt/qt59/
    #     - ninja -j 3

    # ###
    # # 21/11/2017 This configuration odes not work: libstdc++ is used instead of libc++
    # # - stage: Ubuntu 14.04, clang-5.0, Qt5.9, Release
    # #   os: linux
    # #   dist: trusty
    # #   compiler: gcc
    # #   addons:
    # #     apt:
    # #       sources:
    # #         - ubuntu-toolchain-r-test
    # #         - llvm-toolchain-trusty-5.0
    # #         - deadsnakes
    # #       packages:
    # #         - cmake
    # #         - ccache
    # #         - ninja-build
    # #         - libpng-dev
    # #         - libjpeg-dev
    # #         - clang-5.0
    # #         - libc++-dev
    # #         - libc++abi-dev

    # #   #On Linux, with clang, OpencV 3.1 or greater is needed.
            
    # #   before_install:
    # #     # add external ppa for Qt 5.9
    # #     - sudo add-apt-repository -y ppa:beineri/opt-qt591-trusty
    # #     - sudo add-apt-repository -y ppa:lkoppel/opencv
    # #     - sudo apt-get -qy update
    # #     - eval "${MATRIX_EVAL}"

    # #   install:
    # #     - sudo apt-get -qy install qt59-meta-minimal qt59declarative qt59xmlpatterns
    # #     - sudo apt-get -qy install libopencv-dev
        
    # #   env:
    # #     - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    # #   script:
    # #     - mkdir build
    # #     - cd build
    # #     - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/opt/qt59/
    # #     - ninja -j 3

  #######################################################

    #OLD
      
    #   before_install:
    #     - echo $PATH
    #     #- rvm use ruby-2.0.0-p648
    #     #- echo $PATH
    #     - xcodebuild -version
    #     - brew update
    #     #- brew config
    #     #- brew doctor
    #     #- brew outdated qt5 || brew upgrade --verbose qt5
    #     #- brew outdated opencv || (brew tap homebrew/science && brew upgrade opencv)
    #     #- brew tap homebrew/science 
    #     - brew list
    #     #- brew outdated opencv || brew upgrade opencv
    #     - pip2 uninstall -y numpy #see https://github.com/travis-ci/travis-ci/issues/6688
    #     - brew install opencv
    #     - brew install qt@5.5 
    #     - brew list
    #     ##- ls /usr/local/Cellar/qt@5.5
    #     ##- ls /usr/local/opt/qt@5.5
    #     ##- ls /usr/local/opt/qt@5.5/bin
    #     - echo "brew --prefix qt@5.5=$(brew --prefix qt@5.5)"
    #     - export PATH=$PATH:/usr/local/opt/qt@5.5/bin
    #     - qmake -version
    #     #- brew list 
    #     #- brew upgrade --verbose qt@5.7
    #     #- brew upgrade opencv
    #     #- brew list
    #     #- brew install qt5
    #     #- brew link --force qt5
    #     #- echo "brew --prefix qt5=$(brew --prefix qt5)"
    #     - echo "brew --prefix qt@5.5=$(brew --prefix qt@5.5)"
    #     #- echo "brew --prefix opencv=$(brew --prefix opencv)"
    #     #- ls -l /usr/local
    #     #- ls -l /usr/local/opt
    #     #- ls -l /usr/local/Cellar
    #     #- brew list | grep -i opencv
    #     #- brew list | grep -i qt
    #     #- brew list --versions qt5
    #     #- ls -l "$(brew --prefix qt5)"
    #     #- ls -l "$(brew --prefix qt@5.7)"
    #     #- ls -l /usr/local/Cellar/qt

    #   script:
    #     - mkdir build
    #     - cd build
    #     - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt@5.5)
    #     - make -j 3


    ### 09/2019: homebrew does not support 10.11 (El Capitan) anymore
    # - stage: Mac OS, clang, Qt5 & OpenCV from brew, Release
    #   os: osx
    #   osx_image: xcode7.3 #uses OS X 10.11.6 & Xcode 7.3.1, cmake 3.6.2
    #   compiler: clang

    #   before_install:
    #     - brew update
    #     - brew list
    #     #- brew outdated qt || brew upgrade qt
    #     - brew install qt
    #     - brew list
    #     - ls /usr/local/opt/
    #     - export PATH=$PATH:/usr/local/opt/qt/bin
    #     #- brew outdated opencv || (pip2 uninstall -y numpy && brew upgrade opencv)
    #     - pip2 uninstall -y numpy && brew install opencv #see https://github.com/travis-ci/travis-ci/issues/6688
    #     - brew list

    #   script:
    #     - cmake --version
    #     - qmake --version
    #     - mkdir build
    #     - cd build
    #     - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt)
    #     - make -j 3

    ###
    ### 10/2019: this config does not work. It seems that homebrew try to rebuild too many things...
    # - stage: macOS 10.12, clang, Qt5 & OpenCV from brew, Release
    #   os: osx
    #   #osx_image: xcode8.3 #uses macOS 10.12 & Xcode 8.3.3, cmake 3.6.2
    #   osx_image: xcode9.2 #uses macOS 10.12 & Xcode 9.2, cmake 3.6.2
    #   compiler: clang

    #   before_install:
    #     - brew update
    #     - brew list
    #     #- brew outdated qt || brew upgrade qt
    #     - brew install qt
    #     - brew list
    #     - ls /usr/local/opt/
    #     - export PATH=$PATH:/usr/local/opt/qt/bin
    #     #- brew outdated opencv || (pip2 uninstall -y numpy && brew upgrade opencv)
    #     - pip2 uninstall -y numpy && brew install opencv #see https://github.com/travis-ci/travis-ci/issues/6688
    #     - brew list

    #   script:
    #     - cmake --version
    #     - qmake --version
    #     - mkdir build
    #     - cd build
    #     - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
    #     - make -j 3
    #     - make test

    

    ###
    # - stage: macOS 10.14, recent clang, Qt5 & OpenCV from brew, Release
    #   os: osx
    #   osx_image: xcode11.3  #macOS 10.14.6 & Xcode 11.3.1
    #   compiler: clang

    #   before_install:
    #     - brew update
    #     - brew list
    #     #- brew outdated qt || brew upgrade qt
    #     - brew install qt
    #     - brew list
    #     - ls /usr/local/opt/
    #     - export PATH=$PATH:/usr/local/opt/qt/bin
    #     #- brew outdated opencv || (pip2 uninstall -y numpy && brew upgrade opencv)
    #     - pip2 uninstall -y numpy && brew install opencv #see https://github.com/travis-ci/travis-ci/issues/6688
    #     - brew list

    #   script:
    #     - cmake --version
    #     - qmake --version
    #     - mkdir build
    #     - cd build
    #     - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
    #     - make -j 3
    #     - make test

    ###
    - stage: macOS 10.15, recent clang, Qt5 from brew, OpenCV from sources, Release & Debug
      os: osx
      osx_image: xcode12  #macOS 10.15.5 & Xcode 12.0
      compiler: clang
      addons:
        homebrew:
          packages:
            - cmake
            - qt5
            - opencv

      script:
        - cmake --version
        - $(brew --prefix qt)/bin/qmake --version
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
        - make -j 4 VERBOSE=1 || travis_terminate 1
        - make test || travis_terminate 1
        - cd ..
        - mkdir buildDebug
        - cd buildDebug
        - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
        - make -j 4 || travis_terminate 1
        - make test

    - stage: macOS 10.14, recent clang, Qt5 & OpenCV from brew, Release
      os: osx
      osx_image: xcode11.3  #macOS 10.14.6 & Xcode 11.3.1
      compiler: clang
      cache:
        directories:
          - $HOME/Library/Caches/Homebrew
      addons:
        homebrew:
          packages:
            - ccache
            - cmake
            - ninja
            - qt5
            - opencv
          update: true

      script:
        - cmake --version
        - $(brew --prefix qt)/bin/qmake --version
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
        - ninja -j 4 || travis_terminate 1
        - ninja test

    ###
    - stage: macOS 10.13, recent clang, Qt5 & OpenCV from brew, make, Release & Debug
      os: osx
      osx_image: xcode10.1  #macOS 10.13 & Xcode 10.1
      compiler: clang

      before_install:
        - brew update
        - brew list
        #- brew outdated qt || brew upgrade qt
        - brew install qt
        - brew list
        - ls /usr/local/opt/
        - export PATH=$PATH:/usr/local/opt/qt/bin
        #- brew outdated opencv || (pip2 uninstall -y numpy && brew upgrade opencv)
        - pip2 uninstall -y numpy && brew install opencv #see https://github.com/travis-ci/travis-ci/issues/6688
        - brew list

      script:
        - cmake --version
        - qmake --version
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
        - make -j 4 || travis_terminate 1
        - make test || travis_terminate 1
        - cd ..
        - mkdir buildDebug
        - cd buildDebug
        - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DBUILD_TESTING=ON
        - make -j 4 || travis_terminate 1
        - make test
