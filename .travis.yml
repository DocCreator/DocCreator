
language: cpp

cache: ccache

#On Ubuntu Trusty (14.04) we use an external ppa to get Qt 5.9
#Qt is then installed in /opt/qt59/
#See https://launchpad.net/~beineri/+archive/ubuntu/opt-qt591-trusty

jobs:
  include:
    ###
    - stage: linux, gcc-4.8.3, Qt5.2.1, Release
      os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - qtbase5-dev
            - qtdeclarative5-dev
            - libqt5xmlpatterns5-dev
            - libqt5opengl5-dev

      script:
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release 
        - ninja -j 3

    ###
    - stage: linux, gcc-4.8.3, Qt5.2.1, Debug
      os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - qtbase5-dev
            - qtdeclarative5-dev
            - libqt5xmlpatterns5-dev
            - libqt5opengl5-dev

      script:
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug 
        - ninja -j 3

    ###
    - stage: linux, gcc-7.0, Qt5.9, Release
      os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
	  sources:
	    - ubuntu-toolchain-r-test
	    - deadsnakes
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - g++-7

      before_install:
        - sudo add-apt-repository -y ppa:beineri/opt-qt591-trusty
        - sudo apt-get -qy update
        - eval "${MATRIX_EVAL}"

      install:
        - sudo apt-get -qy install qt59-meta-minimal qt59declarative qt59xmlpatterns
        
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

      script:
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release
        - ninja -j 3

    ###
    - stage: linux, clang-5.0, Qt5.9, Release
      os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
	  sources:
	    - ubuntu-toolchain-r-test
	    - deadsnakes
          packages:
            - cmake
            - ccache
            - ninja-build
            - libpng-dev
            - libjpeg-dev
            - libopencv-dev
            - clang-5.0

      before_install:
        # add external ppa for Qt 5.9
        - sudo add-apt-repository -y ppa:beineri/opt-qt591-trusty
        - sudo apt-get -qy update
        - eval "${MATRIX_EVAL}"

      install:
        - sudo apt-get -qy install qt59-meta-minimal qt59declarative qt59xmlpatterns
        
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

      script:
        - mkdir build
        - cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/opt/qt59/
        - ninja -j 3

  #######################################################
  
    ###
    - stage: Mac OS, clang, Qt5 & OpenCV from brew, Release
      os: osx #uses OS X 10.11.6 & Xcode 7.3.1
      compiler: clang

      before_install:
        - brew update
        - brew outdated qt5 || brew upgrade qt5
        - brew outdated opencv || (brew tap homebrew/science && brew upgrade opencv)

      script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - make -j 3

    ###
    - stage: Mac OS, recent clang, Qt5 & OpenCV from brew, Release
      os: osx
      osx_image: xcode9.1  #OS X 10.12 & Xcode 9.1
      compiler: clang

      before_install:
        - brew update
        - brew outdated qt5 || brew upgrade qt5
        - brew outdated opencv || (brew tap homebrew/science && brew upgrade opencv)

      script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - make -j 3

        
       
        